/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package panel;

import com.raven.datechooser.DateBetween;
import com.raven.datechooser.DateChooser;
import com.raven.datechooser.listener.DateChooserAction;
import com.raven.datechooser.listener.DateChooserAdapter;
import component.UserSession;
import config.ConnectDB;
import java.io.File;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Month;
import java.time.format.TextStyle;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author adam x rezaa
 */
public class MasterReport extends javax.swing.JPanel {

    /**
     * Creates new form MasterReportt
     */
    public MasterReport() {
        initComponents();
        UserSession.setPanelOpened("Laporan");
        init();
        DateChooserBetweenInit();
        CbMonthInit();
        CbYearInit();
    }
    
    Statement st;
    Connection con = ConnectDB.getConnection();
    ResultSet rs;
    DefaultTableModel model;
    
    private DateChooser ChDateBetween = new DateChooser();
    private SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
    private String tanggalAwal;
    private String tanggalAkhir;
    private Date tanggalAwalDate;
    private Date tanggalAkhirDate;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBar1 = new javax.swing.JToolBar();
        Lb1 = new javax.swing.JLabel();
        CbType = new javax.swing.JComboBox<>();
        Lb2 = new javax.swing.JLabel();
        TxtDateChooser = new javax.swing.JTextField();
        CbMonth = new javax.swing.JComboBox<>();
        CbYear = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(800, 500));
        setLayout(new java.awt.BorderLayout());

        jToolBar1.setRollover(true);

        Lb1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb1.setText("Tipe Laporan");
        Lb1.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 5));
        jToolBar1.add(Lb1);

        CbType.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CbType.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Harian", "Bulanan" }));
        CbType.setMaximumSize(new java.awt.Dimension(100, 32767));
        CbType.setPreferredSize(new java.awt.Dimension(100, 26));
        CbType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CbTypeActionPerformed(evt);
            }
        });
        jToolBar1.add(CbType);

        Lb2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb2.setText("Tanggal");
        Lb2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 10, 0, 5));
        jToolBar1.add(Lb2);

        TxtDateChooser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TxtDateChooser.setText("Pilih tanggal");
        TxtDateChooser.setMaximumSize(new java.awt.Dimension(200, 2147483647));
        TxtDateChooser.setPreferredSize(new java.awt.Dimension(200, 26));
        jToolBar1.add(TxtDateChooser);

        CbMonth.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CbMonth.setMaximumSize(new java.awt.Dimension(120, 32767));
        CbMonth.setPreferredSize(new java.awt.Dimension(120, 26));
        jToolBar1.add(CbMonth);

        CbYear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CbYear.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CbYear.setMaximumSize(new java.awt.Dimension(120, 32767));
        CbYear.setPreferredSize(new java.awt.Dimension(80, 26));
        jToolBar1.add(CbYear);

        jButton1.setBackground(java.awt.SystemColor.textHighlight);
        jButton1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        jButton1.setText("Lihat Data");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, java.awt.BorderLayout.CENTER);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.RIGHT));

        jButton2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jButton2.setText("Cetak");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);

        add(jPanel1, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void CbTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CbTypeActionPerformed
        // TODO add your handling code here:
        if (CbType.getSelectedIndex()==0) {
            TxtDateChooser.setVisible(true);
            CbMonth.setVisible(false);
            CbYear.setVisible(false);
            
            ChDateBetween.setSelectedDate(new Date());
        }
        if (CbType.getSelectedIndex()==1) {
            TxtDateChooser.setVisible(false);
            CbMonth.setVisible(true);
            CbYear.setVisible(true);
            
            jButton1.setEnabled(true);
        }
    }//GEN-LAST:event_CbTypeActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String sql;
        if (CbType.getSelectedIndex()==0) {
            if (tanggalAwal.equals(tanggalAkhir)) {
                System.out.println(tanggalAwal);
                System.out.println(tanggalAwalDate);
                sql = "WHERE tanggal_bayar = '"+ tanggalAwal +"'";
                TbLoad(sql);
            } else {
                System.out.println(tanggalAwal + " sampai " + tanggalAkhir);
                System.out.println(tanggalAwalDate + " sampai " + tanggalAkhirDate);
                sql = "WHERE tanggal_bayar BETWEEN '"+ tanggalAwal +"' AND '"+ tanggalAkhir +"'";
                TbLoad(sql);
            }
        }
        if (CbType.getSelectedIndex()==1) {
            System.out.println(CbMonth.getSelectedItem().toString() + " " + CbYear.getSelectedItem().toString());
            sql = "WHERE MONTH(payment.tanggal_bayar) = "+ (CbMonth.getSelectedIndex()+1) +" AND YEAR(payment.tanggal_bayar) = "+ CbYear.getSelectedItem().toString() +"\n"+
                    "ORDER BY payment.tanggal_bayar ASC, student.nama ASC, payment.id_transaksi ASC;";
            TbLoad(sql);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        df = new SimpleDateFormat("yyyy-MM-dd");
        
        try {
            ConnectDB.getConnection();
            try {
                HashMap parameter = new HashMap();
                
                if (CbType.getSelectedIndex()==0) {
                    parameter.put("tanggalAwal", tanggalAwal);
                    parameter.put("tanggalAkhir", tanggalAkhir);
                    File rpt = new File("src/report/reportDaily.jrxml");
                    
                    JasperDesign jdesign = JRXmlLoader.load(rpt);
                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = net.sf.jasperreports.engine.JasperFillManager.fillReport(jreport, parameter, ConnectDB.getConnection());
                    JasperViewer.viewReport(jprint, false);
                }
                if (CbType.getSelectedIndex()==1) {
                    parameter.put("month", CbMonth.getSelectedItem().toString());
                    parameter.put("monthNum", CbMonth.getSelectedIndex()+1);
                    parameter.put("year", CbYear.getSelectedItem().toString());
                    parameter.put("yearNum", Integer.parseInt(CbYear.getSelectedItem().toString()));
                    File rpt = new File("src/report/reportMonthly.jrxml");
                    
                    JasperDesign jdesign = JRXmlLoader.load(rpt);
                    JasperReport jreport = JasperCompileManager.compileReport(jdesign);
                    JasperPrint jprint = net.sf.jasperreports.engine.JasperFillManager.fillReport(jreport, parameter, ConnectDB.getConnection());
                    JasperViewer.viewReport(jprint, false);
                }
            } catch (Exception e) {
                System.out.println(e);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_jButton2ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CbMonth;
    private javax.swing.JComboBox<String> CbType;
    private javax.swing.JComboBox<String> CbYear;
    private javax.swing.JLabel Lb1;
    private javax.swing.JLabel Lb2;
    private javax.swing.JTextField TxtDateChooser;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
    
    private void init() {
        TxtDateChooser.setVisible(true);
        CbMonth.setVisible(false);
        CbYear.setVisible(false);
        jButton1.setEnabled(false);
        
        String[] judul = {"ID Transaksi","Tanggal", "Siswa", "Pembayaran", "Jumlah", "Petugas"};
        model = new DefaultTableModel(judul,0) {
            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }
        };
        jTable1.setModel(model);
    }
    
    private void DateChooserBetweenInit() {
        ChDateBetween.setTextField(TxtDateChooser);
        ChDateBetween.setDateSelectionMode(DateChooser.DateSelectionMode.BETWEEN_DATE_SELECTED);
        ChDateBetween.setDateFormat(new SimpleDateFormat("dd-MMMM-yyyy"));
//        ChDateBetween.setSelectedDate(new Date());
        ChDateBetween.addActionDateChooserListener(new DateChooserAdapter() {
            @Override
            public void dateBetweenChanged(DateBetween date, DateChooserAction action) {
                SimpleDateFormat df = new SimpleDateFormat("yyyy-MM-dd");
                String dateForm = df.format(date.getFromDate());
                String toDate = df.format(date.getToDate());
                tanggalAwalDate = date.getFromDate();
                tanggalAkhirDate = date.getToDate();
                tanggalAwal = dateForm;
                tanggalAkhir = toDate;
                
                jButton1.setEnabled(true);
            }
        });
    }
    
    private void CbMonthInit() {
        // Create array of months for combo box
        Month[] months = Month.values();
        String[] monthStrings = new String[months.length];
        for (int i = 0; i < months.length; i++) {
            monthStrings[i] = months[i].getDisplayName(TextStyle.FULL_STANDALONE, new Locale("id", "ID"));
        }

        // Create default combo box model and set it to the combo box
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(monthStrings);
        CbMonth.setModel(model);

        // Select current month by default
        Month thisMonth = LocalDate.now().getMonth();
        CbMonth.setSelectedItem(thisMonth.getDisplayName(TextStyle.FULL_STANDALONE, new Locale("id", "ID")));
    }
    private void CbYearInit() {
        // Create array of years for combo box
        int currentYear = LocalDate.now().getYear();
        Integer[] yearNumbers = new Integer[201];
        for (int i = 0; i < yearNumbers.length; i++) {
            yearNumbers[i] = currentYear - 100 + i;
        }

        // Create default combo box model and set it to the combo box
        DefaultComboBoxModel modelYear = new DefaultComboBoxModel<>(yearNumbers);
        CbYear.setModel(modelYear);

        // Select current year by default
        CbYear.setSelectedItem(currentYear);
    }
    
    private void TbLoad(String dateSelected) {
        String[] judul = {"ID Transaksi","Tanggal", "Siswa", "Pembayaran", "Jumlah", "Petugas"};
        model = new DefaultTableModel(judul,0) {
            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }
        };
        
        jTable1.setModel(model);
        SimpleDateFormat df = new SimpleDateFormat("dd MMMM yyyy", new Locale("id", "ID"));
        String sql = "SELECT payment.id_transaksi, user.nama AS nama_petugas, student.nama AS nama_siswa, payment.tanggal_bayar, payment.bulan, payment.tahun, payment.jumlah_bayar\n" +
                "FROM `payment`\n" +
                "JOIN user ON payment.id_petugas = user.id_petugas\n" +
                "JOIN student ON payment.nis = student.nis " + dateSelected;
        try {
            rs = con.createStatement().executeQuery(sql);
            
            while(rs.next()) {
                String id_transaction = rs.getString("id_transaksi");
                String officerName = rs.getString("nama_petugas");
                String studentName = rs.getString("nama_siswa");
                String date = df.format(rs.getDate("tanggal_bayar"));
                String pay = rs.getString("bulan") + " " + rs.getString("tahun");
                String fee = rs.getString("jumlah_bayar");

                String[] data = {id_transaction, date, studentName, pay, fee, officerName};
                model.addRow(data);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
}
