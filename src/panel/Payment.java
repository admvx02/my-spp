/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package panel;

import component.UserSession;
import config.ConnectDB;
import com.raven.datechooser.DateChooser;
import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.text.SimpleDateFormat;
import java.time.LocalDate;
import java.time.Month;
import java.time.format.TextStyle;
import java.util.Calendar;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.NumberFormatter;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.design.JasperDesign;
import net.sf.jasperreports.engine.xml.JRXmlLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author adam x rezaa
 */
public class Payment extends javax.swing.JPanel {

    /**
     * Creates new form Payment
     */
    public Payment() {
        initComponents();
        init();
        UserSession.setPanelOpened("Pembayaran");
    }
    
    Statement st;
    PreparedStatement stmt;
    Connection con = ConnectDB.getConnection();
    ResultSet rs;
    DefaultTableModel model;
    SimpleDateFormat df = new SimpleDateFormat("dd-MMMM-yyyy");
    Calendar calendar = Calendar.getInstance();
    
    private DateChooser ChDateDay = new DateChooser();
    private String idTransaksi;
    private String transaksiPembayaran;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        PnMain = new javax.swing.JPanel();
        Pn1 = new javax.swing.JPanel();
        Lb1 = new javax.swing.JLabel();
        Pn2 = new javax.swing.JPanel();
        Lb2 = new javax.swing.JLabel();
        TxtNIS = new javax.swing.JTextField();
        Pn3 = new javax.swing.JPanel();
        Lb3 = new javax.swing.JLabel();
        LbStudentID = new javax.swing.JLabel();
        Lb4 = new javax.swing.JLabel();
        LbStudentClass = new javax.swing.JLabel();
        Lb5 = new javax.swing.JLabel();
        LbStudentName = new javax.swing.JLabel();
        Lb6 = new javax.swing.JLabel();
        LbStudentCategory = new javax.swing.JLabel();
        Separator1 = new javax.swing.JSeparator();
        PnAddForm = new javax.swing.JPanel();
        PnAddForm_1 = new javax.swing.JPanel();
        Lb7 = new javax.swing.JLabel();
        Lb8 = new javax.swing.JLabel();
        TxtDateChooser = new javax.swing.JTextField();
        Lb9 = new javax.swing.JLabel();
        CbMonth = new javax.swing.JComboBox<>();
        CbYear = new javax.swing.JComboBox();
        BtnAdd = new javax.swing.JButton();
        PnAddForm_2 = new javax.swing.JPanel();
        Lb10 = new javax.swing.JLabel();
        LbTransactionID = new javax.swing.JLabel();
        Lb11 = new javax.swing.JLabel();
        LbTransactionDate = new javax.swing.JLabel();
        Lb12 = new javax.swing.JLabel();
        LbPaymentMonth = new javax.swing.JLabel();
        Lb13 = new javax.swing.JLabel();
        LbSchoolFee = new javax.swing.JLabel();
        Lb14 = new javax.swing.JLabel();
        LbOfficer = new javax.swing.JLabel();
        BtnCancel_AddForm2 = new javax.swing.JButton();
        BtnPay_AddForm2 = new javax.swing.JButton();
        PnSide = new javax.swing.JPanel();
        Pn4 = new javax.swing.JPanel();
        Lb15 = new javax.swing.JLabel();
        Pn5 = new javax.swing.JPanel();
        ScPn_TbMain = new javax.swing.JScrollPane();
        TbMain = new javax.swing.JTable();
        Pn6 = new javax.swing.JPanel();
        BtnDelete = new javax.swing.JButton();
        BtnPrint = new javax.swing.JButton();

        setMinimumSize(new java.awt.Dimension(800, 500));
        setLayout(new java.awt.BorderLayout());

        PnMain.setLayout(new javax.swing.BoxLayout(PnMain, javax.swing.BoxLayout.PAGE_AXIS));

        Pn1.setMaximumSize(new java.awt.Dimension(2147483647, 30));
        Pn1.setMinimumSize(new java.awt.Dimension(400, 30));
        Pn1.setPreferredSize(new java.awt.Dimension(400, 30));
        Pn1.setLayout(new java.awt.GridBagLayout());

        Lb1.setFont(new java.awt.Font("Segoe UI Semibold", 0, 18)); // NOI18N
        Lb1.setText("TRANSAKSI PEMBAYARAN SPP");
        Pn1.add(Lb1, new java.awt.GridBagConstraints());

        PnMain.add(Pn1);

        Pn2.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 20, 0, 20));
        Pn2.setMaximumSize(new java.awt.Dimension(2147483647, 40));
        Pn2.setMinimumSize(new java.awt.Dimension(400, 40));
        Pn2.setPreferredSize(new java.awt.Dimension(400, 40));
        java.awt.GridBagLayout Pn2Layout = new java.awt.GridBagLayout();
        Pn2Layout.columnWeights = new double[] {0.0};
        Pn2.setLayout(Pn2Layout);

        Lb2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb2.setText("Cari : ");
        Pn2.add(Lb2, new java.awt.GridBagConstraints());

        TxtNIS.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TxtNIS.setNextFocusableComponent(TxtDateChooser);
        TxtNIS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TxtNISActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        Pn2.add(TxtNIS, gridBagConstraints);

        PnMain.add(Pn2);

        Pn3.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 20, 0, 20));
        Pn3.setMaximumSize(new java.awt.Dimension(2147483647, 100));
        Pn3.setMinimumSize(new java.awt.Dimension(400, 100));
        Pn3.setPreferredSize(new java.awt.Dimension(400, 100));
        Pn3.setLayout(new java.awt.GridBagLayout());

        Lb3.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb3.setText("NIS");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        Pn3.add(Lb3, gridBagConstraints);

        LbStudentID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LbStudentID.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        Pn3.add(LbStudentID, gridBagConstraints);

        Lb4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb4.setText("Kelas");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        Pn3.add(Lb4, gridBagConstraints);

        LbStudentClass.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LbStudentClass.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        Pn3.add(LbStudentClass, gridBagConstraints);

        Lb5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb5.setText("Nama");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        Pn3.add(Lb5, gridBagConstraints);

        LbStudentName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LbStudentName.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        Pn3.add(LbStudentName, gridBagConstraints);

        Lb6.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb6.setText("Kategori");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        Pn3.add(Lb6, gridBagConstraints);

        LbStudentCategory.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LbStudentCategory.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        Pn3.add(LbStudentCategory, gridBagConstraints);

        PnMain.add(Pn3);

        Separator1.setMaximumSize(new java.awt.Dimension(32767, 4));
        Separator1.setMinimumSize(new java.awt.Dimension(400, 4));
        Separator1.setPreferredSize(new java.awt.Dimension(400, 4));
        PnMain.add(Separator1);

        PnAddForm.setMinimumSize(new java.awt.Dimension(400, 385));
        PnAddForm.setLayout(new java.awt.CardLayout());

        PnAddForm_1.setLayout(new java.awt.GridBagLayout());

        Lb7.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Lb7.setText("Tambah Pembayaran");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 20, 0);
        PnAddForm_1.add(Lb7, gridBagConstraints);

        Lb8.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb8.setText("Tanggal Bayar");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        PnAddForm_1.add(Lb8, gridBagConstraints);

        TxtDateChooser.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        TxtDateChooser.setNextFocusableComponent(CbMonth);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        PnAddForm_1.add(TxtDateChooser, gridBagConstraints);

        Lb9.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb9.setText("Bulan Pembayaran");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 5, 0);
        PnAddForm_1.add(Lb9, gridBagConstraints);

        CbMonth.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CbMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CbMonth.setNextFocusableComponent(CbYear);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        PnAddForm_1.add(CbMonth, gridBagConstraints);

        CbYear.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        CbYear.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CbYear.setNextFocusableComponent(BtnAdd);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        PnAddForm_1.add(CbYear, gridBagConstraints);

        BtnAdd.setBackground(java.awt.SystemColor.textHighlight);
        BtnAdd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        BtnAdd.setText("Tambah");
        BtnAdd.setMaximumSize(new java.awt.Dimension(83, 30));
        BtnAdd.setMinimumSize(new java.awt.Dimension(83, 30));
        BtnAdd.setPreferredSize(new java.awt.Dimension(83, 30));
        BtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnAddActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        PnAddForm_1.add(BtnAdd, gridBagConstraints);

        PnAddForm.add(PnAddForm_1, "card2");

        PnAddForm_2.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 20, 10, 20));
        PnAddForm_2.setLayout(new java.awt.GridBagLayout());

        Lb10.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb10.setForeground(java.awt.SystemColor.textInactiveText);
        Lb10.setText("No. Transaksi");
        Lb10.setPreferredSize(new java.awt.Dimension(80, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        PnAddForm_2.add(Lb10, gridBagConstraints);

        LbTransactionID.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LbTransactionID.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LbTransactionID.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        PnAddForm_2.add(LbTransactionID, gridBagConstraints);

        Lb11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb11.setForeground(java.awt.SystemColor.textInactiveText);
        Lb11.setText("Tanggal Bayar");
        Lb11.setPreferredSize(new java.awt.Dimension(80, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        PnAddForm_2.add(Lb11, gridBagConstraints);

        LbTransactionDate.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LbTransactionDate.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LbTransactionDate.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        PnAddForm_2.add(LbTransactionDate, gridBagConstraints);

        Lb12.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb12.setForeground(java.awt.SystemColor.textInactiveText);
        Lb12.setText("Bulan Pembayaran");
        Lb12.setPreferredSize(new java.awt.Dimension(80, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        PnAddForm_2.add(Lb12, gridBagConstraints);

        LbPaymentMonth.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LbPaymentMonth.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LbPaymentMonth.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        PnAddForm_2.add(LbPaymentMonth, gridBagConstraints);

        Lb13.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb13.setForeground(java.awt.SystemColor.textInactiveText);
        Lb13.setText("Biaya SPP");
        Lb13.setPreferredSize(new java.awt.Dimension(80, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        PnAddForm_2.add(Lb13, gridBagConstraints);

        LbSchoolFee.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LbSchoolFee.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LbSchoolFee.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        PnAddForm_2.add(LbSchoolFee, gridBagConstraints);

        Lb14.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        Lb14.setForeground(java.awt.SystemColor.textInactiveText);
        Lb14.setText("Petugas");
        Lb14.setPreferredSize(new java.awt.Dimension(80, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        PnAddForm_2.add(Lb14, gridBagConstraints);

        LbOfficer.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        LbOfficer.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        LbOfficer.setText("-");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 3.0;
        PnAddForm_2.add(LbOfficer, gridBagConstraints);

        BtnCancel_AddForm2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        BtnCancel_AddForm2.setText("Batal");
        BtnCancel_AddForm2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnCancel_AddForm2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        PnAddForm_2.add(BtnCancel_AddForm2, gridBagConstraints);

        BtnPay_AddForm2.setBackground(java.awt.SystemColor.textHighlight);
        BtnPay_AddForm2.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        BtnPay_AddForm2.setText("Bayar");
        BtnPay_AddForm2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPay_AddForm2ActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_END;
        gridBagConstraints.insets = new java.awt.Insets(20, 0, 0, 0);
        PnAddForm_2.add(BtnPay_AddForm2, gridBagConstraints);

        PnAddForm.add(PnAddForm_2, "card2");

        PnMain.add(PnAddForm);

        add(PnMain, java.awt.BorderLayout.CENTER);

        PnSide.setBackground(javax.swing.UIManager.getDefaults().getColor("TextArea.background"));
        PnSide.setMaximumSize(new java.awt.Dimension(400, 32767));
        PnSide.setMinimumSize(new java.awt.Dimension(400, 500));
        PnSide.setPreferredSize(new java.awt.Dimension(400, 500));
        PnSide.setLayout(new java.awt.BorderLayout());

        Pn4.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        Pn4.setMinimumSize(new java.awt.Dimension(400, 60));
        Pn4.setOpaque(false);
        Pn4.setPreferredSize(new java.awt.Dimension(400, 60));
        Pn4.setLayout(new java.awt.GridBagLayout());

        Lb15.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        Lb15.setText("Riwayat Pembayaran");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LAST_LINE_START;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        Pn4.add(Lb15, gridBagConstraints);

        PnSide.add(Pn4, java.awt.BorderLayout.PAGE_START);

        Pn5.setOpaque(false);
        Pn5.setLayout(new java.awt.BorderLayout());

        ScPn_TbMain.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 0));
        ScPn_TbMain.setMaximumSize(new java.awt.Dimension(400, 32767));
        ScPn_TbMain.setPreferredSize(new java.awt.Dimension(400, 402));

        TbMain.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TbMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TbMainMouseClicked(evt);
            }
        });
        ScPn_TbMain.setViewportView(TbMain);

        Pn5.add(ScPn_TbMain, java.awt.BorderLayout.CENTER);

        PnSide.add(Pn5, java.awt.BorderLayout.CENTER);

        Pn6.setBorder(javax.swing.BorderFactory.createEmptyBorder(10, 10, 10, 10));
        Pn6.setOpaque(false);
        Pn6.setLayout(new java.awt.GridBagLayout());

        BtnDelete.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.Red"));
        BtnDelete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        BtnDelete.setText("Hapus");
        BtnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnDeleteActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_START;
        gridBagConstraints.weightx = 1.0;
        Pn6.add(BtnDelete, gridBagConstraints);

        BtnPrint.setBackground(javax.swing.UIManager.getDefaults().getColor("Actions.GreyInline"));
        BtnPrint.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        BtnPrint.setText("Cetak");
        BtnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BtnPrintActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
        gridBagConstraints.weightx = 1.0;
        Pn6.add(BtnPrint, gridBagConstraints);

        PnSide.add(Pn6, java.awt.BorderLayout.PAGE_END);

        add(PnSide, java.awt.BorderLayout.LINE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void TxtNISActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TxtNISActionPerformed
        // TODO add your handling code here:
        loadData();
        TxtNIS.setText("");
        
        BtnAdd.setEnabled(true);
        TxtDateChooser.setEnabled(true);
        CbMonth.setEnabled(true);
        CbYear.setEnabled(true);
    }//GEN-LAST:event_TxtNISActionPerformed

    private void BtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnAddActionPerformed
        // TODO add your handling code here:
        preparePaymentBtn();
    }//GEN-LAST:event_BtnAddActionPerformed

    private void BtnCancel_AddForm2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnCancel_AddForm2ActionPerformed
        // TODO add your handling code here:
        PnAddForm.removeAll();
        PnAddForm.add(PnAddForm_1);
        PnAddForm.revalidate();
        PnAddForm.repaint();
    }//GEN-LAST:event_BtnCancel_AddForm2ActionPerformed

    private void BtnPay_AddForm2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPay_AddForm2ActionPerformed
        // TODO add your handling code here:
        df = new SimpleDateFormat("yyyy-MM-dd");
        try {
            String sql = "SELECT COUNT(*) FROM payment WHERE payment.nis = ? AND bulan = ? AND tahun = ?";
            PreparedStatement stmt = con.prepareStatement(sql);
            stmt.setString(1, LbStudentID.getText());
            stmt.setString(2, CbMonth.getSelectedItem().toString());
            stmt.setString(3, CbYear.getSelectedItem().toString());

            // Jalankan statement SQL
            ResultSet rs = stmt.executeQuery();

            // Ambil hasil query
            if (rs.next()) {
                int jumlahPembayaran = rs.getInt(1);
                if (jumlahPembayaran > 0) {
                    JOptionPane.showMessageDialog(null, "Siswa sudah membayar pada bulan tersebut!", "Pemberitahuan", JOptionPane.ERROR_MESSAGE);
                } else {
                    String sqll = "INSERT INTO `payment` (`id_petugas`, `nis`, `tanggal_bayar`, `bulan`, `tahun`, `jumlah_bayar`) VALUES (?, ?, ?, ?, ?, ?);";
                    stmt = con.prepareStatement(sqll);
                    stmt.setString(1, UserSession.getId());
                    stmt.setString(2, LbStudentID.getText());
                    stmt.setString(3, df.format(ChDateDay.getSelectedDate()));
                    stmt.setString(4, CbMonth.getSelectedItem().toString());
                    stmt.setString(5, CbYear.getSelectedItem().toString());
                    stmt.setString(6, LbSchoolFee.getText());
                    System.out.println(sql);

                    // Menjalankan perintah untuk menambahkan data baru
                    int rowsAffected = stmt.executeUpdate();

                    System.out.println(rowsAffected + " baris berhasil ditambahkan ke tabel.");
                    JOptionPane.showMessageDialog(null, "Data berhasil ditambahkan");
                }
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
        loadTb(LbStudentID.getText());
    }//GEN-LAST:event_BtnPay_AddForm2ActionPerformed

    private void TbMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TbMainMouseClicked
        // TODO add your handling code here:
        BtnPrint.setEnabled(true);
        BtnDelete.setEnabled(true);

        int i = TbMain.getSelectedRow();
        idTransaksi = model.getValueAt(i, 0).toString();
        transaksiPembayaran = model.getValueAt(i, 2).toString();
    }//GEN-LAST:event_TbMainMouseClicked

    private void BtnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnDeleteActionPerformed
        // TODO add your handling code here:
        if (idTransaksi.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Tidak ada data yang dipilih!", null, JOptionPane.WARNING_MESSAGE);
        } else {
            int jawaban = JOptionPane.showConfirmDialog(null, "Apakah Anda yakin ingin menghapus data " + transaksiPembayaran + "?", "Konfirmasi", JOptionPane.YES_NO_OPTION);
            if(jawaban == JOptionPane.YES_OPTION) {
                // kode untuk menghapus data
                try {
                    String sql = "DELETE FROM payment WHERE id_transaksi = ?";
                    stmt = con.prepareStatement(sql);
                    stmt.setString(1, idTransaksi);
                    stmt.executeUpdate();
                    System.out.println(sql);
                    JOptionPane.showMessageDialog(null, "Data berhasil dihapus!", "Sukses", JOptionPane.INFORMATION_MESSAGE);
                    idTransaksi = "";
                    transaksiPembayaran = "";
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Data gagal dihapus!" + e, "Peringatan", JOptionPane.WARNING_MESSAGE);
                }
            }
        }
        loadTb(LbStudentID.getText());
    }//GEN-LAST:event_BtnDeleteActionPerformed

    private void BtnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BtnPrintActionPerformed
        // TODO add your handling code here:
        df = new SimpleDateFormat("yyyy-MM-dd");
        
        try {
            ConnectDB.getConnection();
            try {
                HashMap parameter = new HashMap();
                
                parameter.put("id_transaksi", Integer.parseInt(idTransaksi));
//                File rpt = new File("src/report/reportStudent.jrxml");
                String path = "C:/Users/Adam/Documents/New Netbeans/TugasAkhir/src/report/reportStudent.jasper";
//
//                JasperDesign jdesign = JRXmlLoader.load(rpt);
//                JasperReport jreport = JasperCompileManager.compileReport(jdesign);
//                JasperPrint jprint = net.sf.jasperreports.engine.JasperFillManager.fillReport(jreport, parameter, ConnectDB.getConnection());
                JasperPrint jprint = JasperFillManager.fillReport(path,parameter, ConnectDB.getConnection());
                JasperViewer.viewReport(jprint, false);
            } catch (Exception e) {
                System.out.println(e);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }//GEN-LAST:event_BtnPrintActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BtnAdd;
    private javax.swing.JButton BtnCancel_AddForm2;
    private javax.swing.JButton BtnDelete;
    private javax.swing.JButton BtnPay_AddForm2;
    private javax.swing.JButton BtnPrint;
    private javax.swing.JComboBox<String> CbMonth;
    private javax.swing.JComboBox CbYear;
    private javax.swing.JLabel Lb1;
    private javax.swing.JLabel Lb10;
    private javax.swing.JLabel Lb11;
    private javax.swing.JLabel Lb12;
    private javax.swing.JLabel Lb13;
    private javax.swing.JLabel Lb14;
    private javax.swing.JLabel Lb15;
    private javax.swing.JLabel Lb2;
    private javax.swing.JLabel Lb3;
    private javax.swing.JLabel Lb4;
    private javax.swing.JLabel Lb5;
    private javax.swing.JLabel Lb6;
    private javax.swing.JLabel Lb7;
    private javax.swing.JLabel Lb8;
    private javax.swing.JLabel Lb9;
    private javax.swing.JLabel LbOfficer;
    private javax.swing.JLabel LbPaymentMonth;
    private javax.swing.JLabel LbSchoolFee;
    private javax.swing.JLabel LbStudentCategory;
    private javax.swing.JLabel LbStudentClass;
    private javax.swing.JLabel LbStudentID;
    private javax.swing.JLabel LbStudentName;
    private javax.swing.JLabel LbTransactionDate;
    private javax.swing.JLabel LbTransactionID;
    private javax.swing.JPanel Pn1;
    private javax.swing.JPanel Pn2;
    private javax.swing.JPanel Pn3;
    private javax.swing.JPanel Pn4;
    private javax.swing.JPanel Pn5;
    private javax.swing.JPanel Pn6;
    private javax.swing.JPanel PnAddForm;
    private javax.swing.JPanel PnAddForm_1;
    private javax.swing.JPanel PnAddForm_2;
    private javax.swing.JPanel PnMain;
    private javax.swing.JPanel PnSide;
    private javax.swing.JScrollPane ScPn_TbMain;
    private javax.swing.JSeparator Separator1;
    private javax.swing.JTable TbMain;
    private javax.swing.JTextField TxtDateChooser;
    private javax.swing.JTextField TxtNIS;
    // End of variables declaration//GEN-END:variables

    private void init() {
        BtnAdd.setEnabled(false);
        TxtDateChooser.setEnabled(false);
        CbMonth.setEnabled(false);
        CbYear.setEnabled(false);
        BtnDelete.setEnabled(false);
        BtnPrint.setEnabled(false);
        
        // Date Chooser
        ChDateDay.setTextField(TxtDateChooser);
        ChDateDay.setDateSelectionMode(DateChooser.DateSelectionMode.SINGLE_DATE_SELECTED);
        ChDateDay.setDateFormat(new SimpleDateFormat("dd-MMMM-yyyy"));
        ChDateDay.setSelectedDate(new Date());
        
        // Combo Box Month and Year
        CbMonthInit();
        CbYearInit();
        
        String[] judul = {"No.","Tanggal","Pembayaran","Jumlah"};
        model = new DefaultTableModel(judul,0) {
            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }
        };
        TbMain.setModel(model);
    }
    private void CbMonthInit() {
        // Create array of months for combo box
        Month[] months = Month.values();
        String[] monthStrings = new String[months.length];
        for (int i = 0; i < months.length; i++) {
            monthStrings[i] = months[i].getDisplayName(TextStyle.FULL_STANDALONE, new Locale("id", "ID"));
        }

        // Create default combo box model and set it to the combo box
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>(monthStrings);
        CbMonth.setModel(model);

        // Select current month by default
        Month thisMonth = LocalDate.now().getMonth();
        CbMonth.setSelectedItem(thisMonth.getDisplayName(TextStyle.FULL_STANDALONE, new Locale("id", "ID")));
    }
    private void CbYearInit() {
        // Create array of years for combo box
        int currentYear = LocalDate.now().getYear();
        Integer[] yearNumbers = new Integer[201];
        for (int i = 0; i < yearNumbers.length; i++) {
            yearNumbers[i] = currentYear - 100 + i;
        }

        // Create default combo box model and set it to the combo box
        DefaultComboBoxModel<Integer> modelYear = new DefaultComboBoxModel<>(yearNumbers);
        CbYear.setModel(modelYear);

        // Select current year by default
        CbYear.setSelectedItem(currentYear);
    }
    private void preparePaymentBtn() {
        df = new SimpleDateFormat("dd-MM-yyyy");
        if (LbStudentID.getText().isBlank()) {
            JOptionPane.showMessageDialog(null, "Siswa belum ditentukan", "Peringatan", JOptionPane.ERROR_MESSAGE);
        } else {
            PnAddForm.removeAll();
            PnAddForm.add(PnAddForm_2);
            PnAddForm.revalidate();
            PnAddForm.repaint();
        
            String sql = "SELECT MAX(id_transaksi) + 1 AS id_baru FROM payment";
            String sqll = "SELECT (level.nominal - category.potongan) AS total_biaya_spp \n" +
                    "FROM student \n" +
                    "JOIN class ON student.id_kelas = class.id_kelas \n" +
                    "JOIN level ON class.id_tingkatan = level.id_tingkatan \n" +
                    "JOIN category ON student.id_kategori = category.id_kategori \n" +
                    "WHERE student.nis = '"+ LbStudentID.getText() +"'";
            
            try {
                rs = con.createStatement().executeQuery(sql);
                while(rs.next()) {
                    LbTransactionID.setText(rs.getString("id_baru"));
                }    
                rs = con.createStatement().executeQuery(sqll);
                while(rs.next()) {
                    LbSchoolFee.setText(String.valueOf(rs.getInt("total_biaya_spp")));
                }    
                
                LbTransactionDate.setText(df.format(ChDateDay.getSelectedDate()));
                LbPaymentMonth.setText(CbMonth.getSelectedItem().toString() + " " + CbYear.getSelectedItem().toString());
                LbOfficer.setText(UserSession.getName());
            } catch (Exception e) {
                System.out.println(e);
            }
        }
    }
    private void loadData() {
        String sql = "SELECT s.nis, k.nama_kelas, s.nama, ka.jenis_kategori\n" +
                "FROM student s\n" +
                "JOIN class k ON s.id_kelas = k.id_kelas\n" +
                "JOIN category ka ON s.id_kategori = ka.id_kategori\n" +
                "WHERE s.nis = '" + TxtNIS.getText() + "' OR s.nama LIKE '%" + TxtNIS.getText() + "%'";
        try {
            rs = con.createStatement().executeQuery(sql);
            
            if(rs.next()) {
                String id = rs.getString("nis");
                String kelas = rs.getString("nama_kelas");
                String nama = rs.getString("nama");
                String kategori = rs.getString("jenis_kategori");
                
                loadTb(TxtNIS.getText());
                
                LbStudentID.setText(id);
                LbStudentClass.setText(kelas);
                LbStudentName.setText(nama);
                LbStudentCategory.setText(kategori);
            } else {
                JOptionPane.showMessageDialog(null, "Data siswa tidak ditemukan!", "Peringatan", JOptionPane.WARNING_MESSAGE);
                LbStudentID.setText("");
                LbStudentClass.setText("");
                LbStudentName.setText("");
                LbStudentCategory.setText("");
                
                init();
                PnAddForm.removeAll();
                PnAddForm.add(PnAddForm_1);
                PnAddForm.revalidate();
                PnAddForm.repaint();
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
    private void loadTb(String nis) {
        String[] judul = {"No.","Tanggal","Pembayaran","Jumlah"};
        model = new DefaultTableModel(judul,0) {
            @Override
            public boolean isCellEditable(int row, int column) {
               //all cells false
               return false;
            }
        };
        TbMain.setModel(model);
        df = new SimpleDateFormat("dd-MM-yyyy", new Locale("id", "ID"));
        String sql = "SELECT s.nama, p.id_transaksi, p.tanggal_bayar, p.bulan, p.tahun, p.jumlah_bayar FROM payment p JOIN student s ON p.nis = s.nis WHERE p.nis = '"+ nis +"' OR s.nama LIKE '%"+ nis +"%'";
        try {
            rs = con.createStatement().executeQuery(sql);
            while(rs.next()) {
                String id = rs.getString("id_transaksi");
                String date = df.format(rs.getDate("tanggal_bayar"));
                String payment = rs.getString("bulan") + " " + rs.getString("tahun");
                String total = rs.getString("jumlah_bayar");
                
                String[] data = {id, date, payment, total};
                model.addRow(data);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
}
